!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self)["eventbus-umd"]=e()}(this,function(){"use strict";class t{constructor(){return this.events={},this.max=20,this.counts=0,this}static getInstance(){return null===this.intance&&(this.intance=new t),this.intance}on(t,e){if(this.counts>this.max)throw new Error("counts of event out of limit , may cause unknown memory error");return this.events[t]=e,this.counts+=1,this}once(e,n){return this.on(e,(...t)=>{n(...t),this.off(e)})}emit(t,e){if(!Object.prototype.hasOwnProperty.call(this.events,t))throw new Error(`event ${t} does not exist in eventbus`);const n=this.events[t];if("function"!=typeof n)throw new Error(`event ${t} is not a function`);n(e)}off(t){if(!Object.prototype.hasOwnProperty.call(this.events,t))throw new Error(`event ${t} does not exist in eventbus`);return delete this.events[t],this}removeAll(){return this.events={},this}}return t.intance=null,t.getInstance()});
